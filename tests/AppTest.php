<?php

/**
 * Test class for App.
 * Generated by PHPUnit on 2012-03-04 at 11:37:03.
 */
class AppTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var \pff\App
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new \pff\App('one/two/three');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }


    public function testSetErrorReportingProd() {
        $this->object->setErrorReporting();
        $this->assertEquals('Off', ini_get('display_errors'));
        $this->assertEquals('On', ini_get('log_errors'));
    }

    /**
     * @covers \pff\App::setErrorReporting
     */
    public function testSetErrorReportingDev() {
        define('DEVELOPMENT_ENVIRONMENT',1);
        $this->object->setErrorReporting();
        $this->assertEquals('On', ini_get('display_errors'));
    }

    /**
     * Tests the setting of a user defined route.
     */
    public function testSetRoutes() {
        $this->assertEmpty($this->object->getRoutes());
        $this->object->addRoute('test', 'test');
        $tmp = $this->object->getRoutes();
        $this->assertArrayHasKey('test', $tmp);
        $this->assertEquals('Test', $tmp['test']);
    }

    /**
     * Fails the addition to a static route that points to a non existant file
     */
    public function testSetRoutesFails() {
        $this->setExpectedException('\\pff\\RoutingException');
        $this->object->addRoute('test', 'testNOTController');
    }

    /**
     * Tests the setting of a user defined route.
     */
    public function testSetStaticRoutes() {
        $this->assertEmpty($this->object->getStaticRoutes());
        $this->object->addStaticRoute('test', 'testPage.php');
        $tmp = $this->object->getStaticRoutes();
        $this->assertArrayHasKey('test', $tmp);
        $this->assertEquals('testPage.php', $tmp['test']);
    }

    public function testApplyStaticRouting() {
        $this->object->addStaticRoute('test', 'testPage.php');
        $tmpReq = 'test';
        $this->assertTrue($this->object->applyStaticRouting($tmpReq));
        $this->assertEquals($tmpReq, 'app' . DS . 'pages' . DS . 'testPage.php');
    }

    /**
     * Fails the addition to a static route that points to a non existant file
     */
    public function testSetStaticRoutesFails() {
        $this->setExpectedException('\\pff\\RoutingException');
        $this->object->addStaticRoute('test', 'testNOTPage.php');
    }




}